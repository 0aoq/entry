:root {
    /* default colors (light) */
    --base-hue: 0;
    --base-sat: 0%;
    --base-lit: 93%;

    --background-surface: hsl(
        var(--base-hue),
        var(--base-sat),
        calc(var(--base-lit) + 0%)
    );

    --background-surface1: hsl(
        var(--base-hue),
        var(--base-sat),
        calc(var(--base-lit) + 4%)
    );

    --background-surface1a: hsla(
        var(--base-hue),
        var(--base-sat),
        calc(var(--base-lit) + 8%),
        0.4
    );

    --background-surface2: hsl(
        var(--base-hue),
        var(--base-sat),
        calc(var(--base-lit) + 21%)
    );

    --background-surface3: hsl(
        var(--base-hue),
        var(--base-sat),
        calc(var(--base-lit) + 23%)
    );

    --text-color: hsl(208, 7%, 42%);
    --text-color-faded: hsl(208, 7%, 38%);
    --blue: #2d6886;
    --blue1: #d9edf7;
    --blue2: #025fb1;
    --green: #2b542c;
    --green1: #dff0d8;
    --yellow: #826430;
    --yellow1: #f8edba;
    --red: #a6413f;
    --red1: #f2dede;
    --red2: #fdf6f6;
    --red3: #ad0008;
}

html.dark-theme {
    --base-lit: 11%;
    --text-color: hsl(204, 4%, 80%);
    --text-color-faded: hsl(207, 5%, 54%);
    --blue: #5c8ca4;
    --blue1: #2b383e;
    --blue2: #4b99d1;
    --green: #699269;
    --green1: #2d3829;
    --yellow: #d1bb94;
    --yellow1: #4e4632;
    --red: #bb8483;
    --red1: #4c2a2a;
    --red2: #a3717126;
    --red3: #e0aeb4;
}

html.purple-theme {
    --base-hue: 255;
    --base-sat: 50%;
}

html.blue-theme {
    --base-hue: 203;
    --base-sat: 12%;
}

* {
    margin: 0;
    font-family:
        system-ui,
        -apple-system,
        BlinkMacSystemFont,
        "Segoe UI",
        Tahoma,
        Geneva,
        Verdana,
        sans-serif;
    word-wrap: break-word;
    word-break: break-word;
    box-sizing: border-box;
}

body,
html {
    margin: 0;
    padding: 0;
    width: 100%;
    scroll-behavior: smooth;
    background: var(--background-surface);
    color: var(--text-color);
    font-size: 16px;
    line-height: 1.5;
    font-weight: 400;
}

main {
    width: 1140px;
    max-width: 100%;
    padding-right: 0.5rem;
    padding-left: 0.5rem;
    margin: auto;
    margin-top: 0.5rem;
    margin-bottom: 0.5rem;
}

.tab-container {
    background: var(--background-surface1);
    padding: 1.5rem;
    height: 45rem;
    overflow-y: auto;
    max-height: 90vh;
    margin-bottom: 0.5rem;
    max-width: 100vw;
    min-height: 15rem;
}

@media screen and (max-height: 950px) {
    .tab-container {
        max-height: 70vh;
    }
}

button,
.button {
    background: var(--background-surface1);
    cursor: pointer;
    border: none;
    outline: none;
    color: var(--text-color-faded1);
    font-size: 16px;
    padding: 0.5rem 0.75rem;
    display: flex;
    justify-content: center;
    align-items: center;
    transition: color 0.1s;
    height: max-content;
    width: max-content;
    font-weight: normal;
    text-decoration: none;
}

button.secondary,
.button.secondary {
    background: var(--background-surface);
}

button:hover,
.button:hover {
    color: var(--blue);
}

.tabbar {
    display: flex;
}

.tabbar button {
    padding: 0.5rem 1rem;
    border-radius: 0.4rem 0.4rem 0 0;
}

.mdnote {
    padding: 1rem;
    margin-bottom: 1rem;

    /* default: note-note */
    background: var(--green1);
    color: var(--green);
}

.mdnote .mdnote-title::before {
    content: "📝";
    margin-right: 1rem;
}

.note-danger,
.note-error {
    background: var(--red1);
    color: var(--red);
}

.mdnote.note-danger .mdnote-title::before,
.mdnote.note-error .mdnote-title::before {
    content: "❗";
}

.note-warning,
.note-warn {
    background: var(--yellow1);
    color: var(--yellow);
}

.mdnote.note-warning .mdnote-title::before,
.mdnote.note-warn .mdnote-title::before {
    content: "⚠️";
}

.note-info {
    background: var(--blue1);
    color: var(--blue);
}

.mdnote.note-info .mdnote-title::before {
    content: "ℹ️";
}

a {
    color: var(--blue2);
    text-decoration: none;
}

a:hover {
    text-decoration: underline;
}

h1,
h2,
h3,
h4,
h5,
h6 {
    margin-bottom: 1rem;
    margin-top: 2rem;
    font-weight: 700;
    width: max-content;
}

h1.no-margin,
h2.no-margin,
h3.no-margin,
h4.no-margin,
h5.no-margin,
h6.no-margin {
    margin: 0;
}

h1 {
    margin-bottom: 2.5rem;
    margin-top: 3.5rem;
    font-size: 2.5rem;
    text-align: center;
}

h2 {
    font-size: 2rem;
}

h3 {
    font-size: 1.75rem;
}

h4 {
    font-size: 1.5rem;
}

h5 {
    font-size: 1.25rem;
}

h6 {
    font-size: 1rem;
}

@media screen and (max-width: 800px) {
    .mobile-center {
        margin: auto !important;
    }
}

ul > li,
ol > li {
    margin-top: 0.25rem;
}

p:not(.mdnote p):not(:last-of-type),
pre,
table,
ul,
ol {
    margin-bottom: 1rem;
}

code {
    padding: 0.2rem;
    background: var(--red2);
    color: var(--red3);
    font-family: monospace;
    font-size: 13.5px;
    line-height: 1em;
    max-width: 100%;
}

pre code {
    white-space: pre;
    background: var(--background-surface);
    color: currentColor;
}

pre,
code,
pre code span {
    font-family: monospace;
    white-space: pre;
}

pre {
    --base-brightness: 11%;
    background: var(--background-surface);
    border-left: solid 5px var(--red3);
    padding-left: 0.5rem;
    white-space: pre;
    overflow-x: auto;
    overflow-y: hidden;
    height: max-content;
}

input {
    background: var(--background-surface1);
    color: currentColor;
    border: none;
    outline: none;
    padding: 0.5rem 0.75rem;
    font-size: 16px;
    height: max-content;
    transition: all 0.15s;
}

input:invalid:required {
    box-shadow: inset 0 0 0 2px var(--red);
}

input:invalid {
    /* so, the idea behind this is because the input is technically wrong... but it isn't required,
       we're only going to show a yellow "border" thing! */
    box-shadow: inset 0 0 0 2px var(--yellow);
}

input:disabled {
    opacity: 50%;
    box-shadow: inset 0 0 0 2px var(--background-surface3);
    filter: opacity(50%);
}

.checkbox-container {
    background: var(--background-surface1);
    padding: 0.5rem 0.75rem;
    display: flex;
    justify-content: center;
    align-items: center;
    height: 2.5rem; /* should match the height of an input element */
    width: 2.5rem;
    cursor: pointer;
}

.checkbox-container + input {
    width: calc(18rem - 2.5rem) !important; /* normal input width - checkbox width */
}

/* not checked */
.checkbox-container input[type="checkbox"]:not(:checked) + .check,
.checkbox-container input[type="checkbox"]:checked + * + .x {
    display: none;
}

.checkbox-container input[type="checkbox"]:checked + .check,
.checkbox-container input[type="checkbox"]:not(:checked) + * + .x {
    display: flex;
    justify-content: center;
    align-items: center;
}

.checkbox-container .check {
    fill: var(--green);
}

.checkbox-container .x {
    fill: var(--red3);
}

.checkbox-container input[type="checkbox"] {
    display: none;
}

label {
    user-select: none;
    -webkit-user-select: none;
}

img {
    max-width: 100%;
    vertical-align: middle;
}

hr {
    margin: 1rem 0;
    border: 0;
    border-top: solid 1px var(--background-surface1);
}

.editor-tab hr {
    /* editor-tab really just means markdown preview, it has a lighter background that matches
       the normal color of hr, so we need to make hr brighter when it is inside of that */
    border-color: rgba(120, 125, 125, 0.25);
}

span.highlight {
    background: var(--yellow1);
    padding: 0.2rem;
}

table {
    border-collapse: collapse;
    max-width: max-content;
    min-width: 100%;
}

table th {
    min-width: max-content;
    padding: 6px 10px;
    background: var(--background-surface3);
    border: none;
}

table td {
    border-left: solid 1px rgba(120, 125, 125, 0.1);
    padding: 10px;
}

table td:first-child {
    border-left: 0;
}

table tr {
    border-bottom: solid 1px rgba(120, 125, 125, 0.1);
}

table tr:nth-child(even) {
    background: var(--background-surface1a);
}

table td:focus-within {
    box-shadow: inset 0 0 0 1px var(--blue2);
}

table.force-full tr {
    text-align: center;
}

table.force-full td {
    white-space: pre;
    word-break: normal;
    width: max-content;
}

blockquote {
    padding-left: 0.4rem;
    border-left: solid 5px var(--background-surface);
    font-style: italic;
}

dialog {
    background: var(--background-surface);
    color: currentColor;
    border: none;
    position: fixed;
    margin: auto;
}

dialog h4 {
    margin-top: 0;
}

dialog::backdrop {
    background: rgba(0, 0, 0, 0.5);
}

.editor-tab h1,
.editor-tab h2,
.editor-tab h3,
.editor-tab h4,
.editor-tab h5,
.editor-tab h6 {
    width: 100%;
}

.editor-tab input {
    height: max-content;
}

details {
    background: var(--background-surface1);
    color: currentColor;
    border: none;
    outline: none;
    font-size: 16px;
    height: max-content;
    max-width: 100%;
}

details.details-confined {
    width: 18rem;
    max-width: 100%;
}

details * {
    max-width: 100%;
}

details summary {
    transition: all 0.15s;
    padding: 0.5rem 0.75rem;
    cursor: pointer;
    font-weight: 600;
}

details[open] summary:not(details details summary) {
    margin-bottom: 0.5rem;
}

details summary:hover,
details[open] summary {
    background: var(--background-surface);
    box-shadow: inset 0 0 0 2px var(--background-surface1);
}

details input {
    background: var(--background-surface);
}

details .details-flex-content-list-box {
    display: flex;
    gap: 0.5rem;
    flex-wrap: wrap;
    flex-direction: column;
    padding: 0rem 0.75rem 0.5rem;
}

details details:nth-child(even) {
    background: var(--background-surface);
}

details hr {
    border-color: var(--background-surface2);
}

/* codemirror styles */
.cm-cursor {
    border-color: currentColor !important;
}

.cm-selectionBackground {
    background: var(--background-surface) !important;
}

.cm-editor.cm-focused {
    outline: none;
}

.cm-scroller {
    overflow: auto;
}

.cm-tooltip {
    background-color: var(--background-surface) !important;
    padding: 0.4rem;
    border-radius: 0.2rem;
    border-color: var(--background-surface2) !important;
    color: var(--text-color) !important;
}

.cm-tooltip.cm-completionInfo {
    margin-left: 0.4rem;
}

.cm-tooltip-autocomplete li {
    padding: 0.4rem !important;
    border-radius: 0.2rem;
    transition: all 0.1s;
    color: var(--text-color) !important;
}

.cm-tooltip-autocomplete li[aria-selected="true"] {
    background: var(--background-surface1) !important;
    box-shadow: inset 0 0 0 2px var(--red);
}

/* highlight.js styles */
.hljs-comment {
    color: var(--green);
    font-style: italic;
}

.hljs-keyword {
    color: var(--red3);
}

.hljs-variable,
.hljs-title {
    color: var(--blue2);
}

.hljs-property,
.hljs-attr {
    color: var(--red);
}

.hljs-string {
    color: var(--green);
}

/* special elements */
hue,
sat,
lit,
theme,
comment {
    display: none;
}

hr + br {
    display: none;
}

r {
    display: block;
}

r:not(:last-of-type) {
    margin-bottom: 1rem;
}
