:root {
    /* default colors (light) */
    --base-hue: 0;
    --base-sat: 0%;
    --base-lit: 96%;
    --mod: -;
    --diff: 9%;

    --background-surface-1: hsl(
        var(--base-hue),
        var(--base-sat),
        calc(var(--base-lit) - 2%)
    );

    --background-surface: hsl(
        var(--base-hue),
        var(--base-sat),
        calc(var(--base-lit) + 0%)
    );

    --background-surface1: hsl(
        var(--base-hue),
        var(--base-sat),
        calc(var(--base-lit) var(--mod) 4% + var(--diff))
    );

    --background-surface1a: hsla(
        var(--base-hue),
        var(--base-sat),
        calc(var(--base-lit) var(--mod) 8% + var(--diff)),
        0.4
    );

    --background-surface1-5: hsl(
        var(--base-hue),
        var(--base-sat),
        calc(var(--base-lit) var(--mod) 6% + var(--diff))
    );

    --background-surface1-5a: hsla(
        var(--base-hue),
        var(--base-sat),
        calc(var(--base-lit) var(--mod) 10% + var(--diff)),
        0.4
    );

    --background-surface2: hsl(
        var(--base-hue),
        var(--base-sat),
        calc(var(--base-lit) var(--mod) 21% + var(--diff))
    );

    --background-surface3: hsl(
        var(--base-hue),
        var(--base-sat),
        calc(var(--base-lit) var(--mod) 23% + var(--diff))
    );

    --text-color: hsl(208, 7%, `%);
    --text-color-faded: hsl(208, 7%, 38%);
    --blue: #2d6886;
    --blue1: #d9edf7;
    --blue2: #025fb1;
    --green: #2b542c;
    --green1: #dff0d8;
    --green2: #f8fdf6;
    --green3: #0a7c00;
    --yellow: #826430;
    --yellow1: #f8edba;
    --red: #a6413f;
    --red1: #f2dede;
    --red2: #fdf6f6;
    --red3: #ad0008;
}

.dark-theme {
    --base-lit: 11%;
    --mod: +;
    --diff: 0%;

    --text-color: hsl(204, 4%, 80%);
    --text-color-faded: hsl(207, 5%, 54%);
    --blue: #5c8ca4;
    --blue1: #2b383e;
    --blue2: #4b99d1;
    --green: #699269;
    --green1: #2d3829;
    --green2: #75a37126;
    --green3: #aee0ae;
    --yellow: #d1bb94;
    --yellow1: #4e4632;
    --red: #bb8483;
    --red1: #4c2a2a;
    --red2: #a3717126;
    --red3: #e0aeb4;
}

.purple-theme {
    --base-hue: 255;
    --base-sat: 50%;
}

.blue-theme {
    --base-hue: 203;
    --base-sat: 12%;
}

.pink-theme {
    --base-hue: 0;
    --base-sat: 50%;
}

.green-theme {
    --base-hue: 105;
    --base-sat: 50%;
}

* {
    margin: 0;
    font-family:
        system-ui,
        -apple-system,
        BlinkMacSystemFont,
        "Segoe UI",
        Tahoma,
        Geneva,
        Verdana,
        sans-serif;
    word-wrap: break-word;
    word-break: break-word;
    box-sizing: border-box;
    scroll-behavior: smooth;
}

strong,
em,
a {
    font-family: inherit;
}

body,
html {
    margin: 0;
    padding: 0;
    width: 100%;
    height: 100vh;
    background: var(--background-surface);
    color: var(--text-color);
    font-size: 16px;
    line-height: 1.5;
    font-weight: 400;
    overflow-x: hidden;
    overflow-y: auto;
    transition: background 0.15s;
}

main {
    width: 1140px;
    max-width: 100%;
    padding-right: 0.5rem;
    padding-left: 0.5rem;
    margin: auto;
    margin-top: 0.5rem;
    margin-bottom: 0.5rem;
}

@media screen and (max-width: 800px) {
    main {
        width: 100vw;
        max-width: 100vw;
        padding: 0;
        margin-top: 0;
        margin-bottom: 0;
    }
}

svg {
    fill: currentColor;
}

.tab-container {
    background: var(--background-surface1);
    transition: background 0.15s;
    padding: 1.5rem;
    height: 75vh;
    overflow-y: auto;
    max-height: 90vh;
    margin-bottom: 0.5rem;
    max-width: 100vw;
    min-height: 15rem;
}

@media screen and (max-height: 900px) {
    .tab-container {
        max-height: 65vh;
    }
}

button,
.button {
    background: var(--background-surface1);
    cursor: pointer;
    border: none;
    outline: none;
    color: inherit;
    font-size: 16px;
    padding: 0.5rem 0.75rem;
    display: flex;
    justify-content: center;
    align-items: center;
    transition:
        color 0.1s,
        background 0.1s;
    height: max-content;
    width: max-content;
    font-weight: normal;
    text-decoration: none;
    gap: 0.5rem;
}

button.secondary,
.button.secondary {
    background: var(--background-surface);
}

button:hover,
.button:hover {
    background: var(--background-surface1-5);
    text-decoration: none;
}

button.secondary:hover,
.button.secondary:hover {
    background: var(--background-surface-1);
}

button.tertiary,
.button.tertiary {
    background: var(--background-surface1-5a);
}

button.tertiary:hover,
.button.tertiary:hover {
    background: var(--background-surface1a);
}

button.border,
.button.border {
    background: transparent;
    box-shadow: inset 0 0 0 1px var(--background-surface2);
}

button.border:hover,
.button.border:hover {
    box-shadow: none;
    background: var(--background-surface2);
}

button.border.dashed,
.button.border.dashed {
    box-shadow: none;
    border: dashed 1px var(--background-surface2);
}

button.border.dashed:hover,
.button.border.dashed:hover {
    box-shadow: none;
    border: dashed 1px var(--text-color-faded);
    background: transparent;
}

button.green,
.button.green {
    color: var(--green3);
}

button.red,
.button.red {
    color: var(--red3);
}

button:disabled,
.button:disabled {
    opacity: 50%;
}

button:focus,
.button:focus {
    outline: solid 2px var(--blue);
}

.tabbar {
    display: flex;
}

.tabbar button,
.tabbar .button {
    padding: 0.5rem 1rem;
    height: 40px; /* fixes weird webkit sizing issue (?) which caused the height to be calculated wrong */
}

.tabbar button.secondary,
.tabbar .button.secondary {
    color: var(--text-color-faded);
}

.tabbar button:not(.secondary):hover,
.tabbar .button:not(.secondary):hover {
    background: var(--background-surface1);
}

.mdnote {
    padding: 1rem;
    margin-bottom: 1rem;

    /* default: note-note */
    background: var(--green1);
    color: var(--green);
}

.mdnote .mdnote-title::before {
    content: "📝";
    margin-right: 1rem;
}

.note-danger,
.note-error {
    background: var(--red1);
    color: var(--red);
}

.mdnote.note-danger .mdnote-title::before,
.mdnote.note-error .mdnote-title::before {
    content: "❗";
}

.note-warning,
.note-warn {
    background: var(--yellow1);
    color: var(--yellow);
}

.mdnote.note-warning .mdnote-title::before,
.mdnote.note-warn .mdnote-title::before {
    content: "⚠️";
}

.note-info {
    background: var(--blue1);
    color: var(--blue);
}

.mdnote.note-info .mdnote-title::before {
    content: "ℹ️";
}

a {
    color: var(--blue2);
    text-decoration: none;
}

a:hover {
    text-decoration: underline;
}

h1,
h2,
h3,
h4,
h5,
h6 {
    margin-bottom: 1rem;
    margin-top: 2rem;
    font-weight: 700;
    width: max-content;
    position: relative;
}

h1 br,
h2 br,
h3 br,
h4 br,
h5 br,
h6 br {
    display: none !important;
}

h1.no-margin,
h2.no-margin,
h3.no-margin,
h4.no-margin,
h5.no-margin,
h6.no-margin {
    margin: 0;
}

h1 {
    margin-bottom: 2.5rem;
    margin-top: 3.5rem;
    font-size: 2.5rem;
    text-align: center;
}

h2 {
    font-size: 2rem;
}

h3 {
    font-size: 1.75rem;
}

h4 {
    font-size: 1.5rem;
}

h5 {
    font-size: 1.25rem;
}

h6 {
    font-size: 1rem;
}

.htag {
    color: var(--text-color-faded);
    position: absolute;
    margin-left: 5px;
    opacity: 0;
    transition:
        opacity 0.1s,
        transform 0.1s;
    transform: scale(0);
    top: 0;
}

.htag:hover {
    color: var(--blue);
}

h5 .htag,
h6 .htag {
    display: none;
}

h1:hover .htag,
h2:hover .htag,
h3:hover .htag,
h4:hover .htag,
h5:hover .htag,
h6:hover .htag,
h1:focus .htag,
h2:focus .htag,
h3:focus .htag,
h4:focus .htag,
h5:focus .htag,
h6:focus .htag {
    opacity: 100%;
    transform: scale(1);
}

.mobile-only {
    display: none !important;
}

.full {
    width: 100% !important;
}

@media screen and (max-width: 800px) {
    .mobile-center {
        margin: auto !important;
    }

    .mobile-max {
        width: 100% !important;
    }

    .mobile-only {
        display: block !important;
    }

    .mobile-flex {
        display: flex !important;
    }

    .mobile-block {
        display: block !important;
    }

    .mobile-flex-center {
        justify-content: center !important;
        align-items: center !important;
    }
}

ul > li,
ol > li {
    margin-top: 0.25rem;
}

p:not(.mdnote p):not(.builder\:page p),
pre,
table,
ul,
ol {
    margin-bottom: 1rem;
}

code {
    padding: 0.2rem;
    background: var(--red2);
    color: var(--red3);
    font-family: monospace;
    font-size: 13.5px;
    line-height: 1em;
    max-width: 100%;
}

code * {
    font-family: inherit;
}

pre code {
    white-space: pre;
    background: var(--background-surface);
    color: currentColor;
    padding: 0;
}

pre code p {
    display: none;
}

pre,
code,
pre code span {
    font-family: monospace;
}

pre {
    --base-brightness: 11%;
    background: var(--background-surface);
    border-left: solid 5px var(--red3);
    padding-left: 0.5rem;
    white-space: pre;
    overflow-x: auto;
    overflow-y: hidden;
    height: max-content;
}

input,
select,
button,
.button {
    height: 40px !important;
}

input,
textarea,
select {
    background: var(--background-surface1);
    color: currentColor;
    border: none;
    outline: none;
    padding: 0.5rem 0.75rem;
    font-size: 16px;
    height: max-content;
    max-width: 100%;
    border-radius: 0 !important;
    transition:
        background 0.15s,
        box-shadow 0.25s,
        opacity 0.15s,
        filter 0.15s;
}

input:invalid,
textarea:invalid,
select:invalid,
input.invalid {
    /* so, the idea behind this is because the input is technically wrong... but it isn't required,
       we're only going to show a yellow "border" thing! */
    background-clip: padding-box;
    box-shadow: inset 4px 0 var(--yellow) !important;
}

input:invalid:required,
textarea:invalid:required,
select:invalid:required {
    box-shadow: inset 4px 0 var(--red) !important;
}

input:disabled,
textarea:disabled,
.checkbox-container.disabled,
select:disabled {
    opacity: 50%;
    box-shadow: inset 0 0 0 2px var(--background-surface3);
    filter: opacity(50%);
    cursor: not-allowed !important;
}

input.secondary,
textarea.secondary,
select.secondary {
    background: var(--background-surface);
}

textarea {
    resize: vertical;
}

.checkbox-container.secondary {
    background: var(--background-surface);
}

.checkbox-container {
    background: var(--background-surface1);
    padding: 0.5rem 0.75rem;
    display: flex;
    justify-content: center;
    align-items: center;
    height: 2.5rem; /* should match the height of an input element */
    width: 2.5rem;
    cursor: pointer;
    gap: 0.5rem;
}

.checkbox-container + input {
    width: calc(18rem - 2.5rem) !important; /* normal input width - checkbox width */
}

/* not checked */
.checkbox-container input[type="checkbox"]:not(:checked) + .check,
.checkbox-container input[type="checkbox"]:checked + * + .x {
    display: none;
}

.checkbox-container input[type="checkbox"]:checked + .check,
.checkbox-container input[type="checkbox"]:not(:checked) + * + .x {
    display: flex;
    justify-content: center;
    align-items: center;
}

.checkbox-container input[type="checkbox"] {
    display: none;
}

label {
    user-select: none;
    -webkit-user-select: none;
}

img {
    max-width: 100%;
    vertical-align: middle;
}

hr {
    margin: 1rem 0;
    border: 0;
    border-top: solid 1px var(--background-surface1);
}

html:not(.dark-theme) hr {
    border-color: hsl(var(--base-hue), var(--base-sat), calc(var(--base-lit) - 14%));
}

.editor-tab hr,
.builder\:card hr {
    /* editor-tab really just means markdown preview, it has a lighter background that matches
       the normal color of hr, so we need to make hr brighter when it is inside of that */
    border-color: rgba(120, 125, 125, 0.25);
}

span.highlight {
    background: var(--yellow1);
    padding: 0.2rem;
}

table {
    border-collapse: collapse;
    max-width: 100%;
    min-width: auto;
    overflow: auto;
}

table th {
    min-width: max-content;
    padding: 6px 10px;
    background: var(--background-surface2);
    border: none;
}

table td {
    border-left: solid 1px rgba(120, 125, 125, 0.1);
    padding: 10px;
    text-overflow: ellipsis;
    overflow: hidden;
    overflow-wrap: normal;
    word-break: normal;
    width: max-content;
}

table td:first-child {
    border-left: 0;
}

table tr {
    border-bottom: solid 1px rgba(120, 125, 125, 0.1);
}

table tr:nth-child(even) {
    background: var(--background-surface1a);
}

table td:focus-within {
    box-shadow: inset 0 0 0 1px var(--blue2);
}

table.force-full tr {
    text-align: center;
}

table.force-full td {
    white-space: pre;
    word-break: normal;
    width: max-content;
}

blockquote {
    padding-left: 0.4rem;
    border-left: solid 5px var(--background-surface);
    font-style: italic;
}

dialog {
    background: var(--background-surface);
    color: currentColor;
    border: none;
    position: fixed;
    margin: auto;
}

dialog h4 {
    margin-top: 0;
}

dialog::backdrop {
    background: rgba(0, 0, 0, 0.5);
    backdrop-filter: blur(5px);
}

dialog[open] {
    animation: Grow 0.15s 0s running;
}

.editor-tab h1,
.editor-tab h2,
.editor-tab h3,
.editor-tab h4,
.editor-tab h5,
.editor-tab h6 {
    width: 100%;
}

.editor-tab input {
    height: max-content;
}

.card {
    background: var(--background-surface);
    padding: 1rem;
    display: block;
    width: 100%;
}

details {
    background: var(--background-surface1);
    color: currentColor;
    border: none;
    outline: none;
    font-size: 16px;
    height: max-content;
    max-width: 100%;
    user-select: none;
    -webkit-user-select: none;
    appearance: none;
}

details summary::marker,
details summary::-webkit-details-marker {
    display: none;
}

details.details-confined {
    width: 18rem;
    max-width: 100%;
}

details * {
    max-width: 100%;
}

details summary {
    background: var(--background-surface1);
    transition: all 0.15s;
    padding: 0.5rem 0.75rem;
    cursor: pointer;
    font-weight: 600;
    height: 40px; /* WHY is it normally 40.5px??? WHEN EVERTHING ELSE IS JUST 40!!! */
    list-style: none;
    display: flex;
    align-items: center;
}

details summary::before {
    content: "▸"; /* rip correctly aligned triangle (U+2BC8) */
    margin-right: 5px;
    transition: transform 0.15s;
    /* the styles below are because I had to change the triangle character
       because iphones don't have the good character that I wanted! */
    font-size: 20px;
    margin-bottom: 3px;
}

details[open] summary::before {
    transform: rotate(90deg);
    /* this is kind of awful, why does it make me do this?? */
    margin-bottom: 0; /* ugh */
}

details[open] summary:not(details details summary) {
    margin-bottom: 0.5rem;
}

details summary:hover {
    background: var(--background-surface1-5);
}

details[open] summary {
    background: var(--background-surface);
    box-shadow: inset 0 0 0 2px var(--background-surface1);
}

details input {
    background: var(--background-surface);
}

details .details-flex-content-list-box {
    display: flex;
    gap: 0.5rem;
    flex-wrap: wrap;
    flex-direction: column;
    padding: 0rem 0.75rem 0.5rem;
}

details details:nth-child(even) {
    background: var(--background-surface);
}

details hr {
    border-color: var(--background-surface2);
}

details.horizontal {
    position: relative;
    background: transparent !important;
}

details.horizontal .details-content {
    position: absolute;
    bottom: -40px; /* -height of summary */
    left: 0;
    display: none;
    z-index: 1;
    width: 20rem;
}

details.horizontal summary {
    width: 87px;
    justify-content: center;
}

details[open].horizontal summary {
    margin: 0;
    box-shadow: none;
    background: var(--background-surface1);
}

details[open].horizontal .details-content {
    display: flex;
    background: var(--background-surface1);
}

details[open].horizontal .details-content * {
    width: max-content;
}

/* codemirror styles */
.cm-cursor {
    border-color: currentColor !important;
    border-left: 1.2px solid currentColor !important;
}

.cm-selectionBackground {
    background: var(--red1) !important;
}

.cm-editor.cm-focused {
    outline: none;
}

.cm-scroller {
    overflow: auto;
}

.cm-tooltip {
    background-color: var(--background-surface) !important;
    padding: 0.4rem;
    border-radius: 0.2rem;
    border-color: var(--background-surface2) !important;
    color: var(--text-color) !important;
}

.cm-tooltip.cm-completionInfo {
    margin-left: 0.4rem;
}

.cm-tooltip-autocomplete li {
    padding: 0.4rem !important;
    border-radius: 0.2rem;
    transition: all 0.1s;
    color: var(--text-color) !important;
}

.cm-tooltip-autocomplete li[aria-selected="true"] {
    background: var(--background-surface1) !important;
    box-shadow: inset 0 0 0 2px var(--red);
}

/* highlight.js styles */
.hljs-comment {
    color: var(--green);
    font-style: italic;
}

.hljs-keyword {
    color: var(--red3);
}

.hljs-variable,
.hljs-title {
    color: var(--blue2);
}

.hljs-property,
.hljs-attr {
    color: var(--red);
}

.hljs-string {
    color: var(--green);
}

/* sidebar */
.sidebar {
    height: 100vh;
    width: 30%;
    min-width: 325px; /* just before the footer starts wrapping */
    overflow: auto;
    border-right: solid 1px var(--background-surface2);
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    padding: 0.5rem;
}

.sidebar ol {
    padding-left: 1.5rem;
}

.sidebar-mobile {
    display: none;
    position: fixed;
    width: 100vw;
    height: max-content;
    overflow: scroll;
    bottom: 0;
    background: var(--background-surface);
    border-top: solid 1px var(--background-surface2);
    z-index: 2000;
}

.sidebar-mobile[open] {
    height: 80vh;
}

.sidebar-mobile[open] summary {
    top: 0;
    position: sticky;
    box-shadow: none;
    border-bottom: solid 1px var(--background-surface2);
}

.page-content {
    height: 100vh;
    max-height: initial;
    overflow: auto;
    width: 100%;
    padding-bottom: 4rem;
}

.sidebar-layout-wrapper {
    display: flex;
    height: 100vh;
    width: 100vw;
}

@media screen and (max-width: 800px) {
    .sidebar {
        display: none;
    }

    .sidebar-mobile {
        display: block;
    }
}

/* special elements */
hue,
sat,
lit,
theme,
comment {
    display: none;
}

hr + br {
    display: none;
}

r {
    /* row */
    display: block;
}

rf {
    /* row flow */
    display: flex;
    align-items: center;
}

br:not(.cm-line br) {
    display: block;
}

/* animations */
@keyframes FadeIn {
    0% {
        opacity: 0%;
    }

    25% {
        opacity: 25%;
    }

    50% {
        opacity: 50%;
    }

    75% {
        opacity: 75%;
    }

    100% {
        opacity: 100%;
    }
}

@keyframes FadeOut {
    0% {
        opacity: 100%;
    }

    25% {
        opacity: 75%;
    }

    50% {
        opacity: 50%;
    }

    75% {
        opacity: 25%;
    }

    100% {
        opacity: 0%;
    }
}

@keyframes Float {
    from {
        transform: translateY(0px);
    }

    50% {
        transform: translateY(-5px);
    }

    to {
        transform: translateY(0px);
    }
}

@keyframes Grow {
    from {
        transform: scale(0.95);
    }

    to {
        transform: scale(1);
    }
}

@keyframes GrowShrink {
    from {
        transform: scale(1);
    }

    50% {
        transform: scale(1.05);
    }

    to {
        transform: scale(1);
    }
}

@keyframes Blink {
    0% {
        opacity: 100%;
    }

    50% {
        opacity: 0%;
    }

    100% {
        opacity: 100%;
    }
}

@keyframes SlideInFromLeft {
    from {
        transform: translateX(-100%);
    }

    to {
        transform: translateX(0);
    }
}

/* stuff for builder */
#_doc {
    overflow: auto;
}

.builder\:page {
    --AlignX: center;
    --AlignY: center;
    --Spacing: 10px;

    width: 100vw;
    height: 100vh;

    display: flex;
    flex-direction: column;
    gap: var(--Spacing);

    align-items: var(--AlignX);
    justify-content: var(--AlignY);

    animation: FadeIn 0.5s 0s running;
}

.builder\:text {
    --Size: 16px;
    --Weight: 400;
    --LineSpacing: 1.5;
    --LetterSpacing: 1;
    --Margins: 0;
    --Padding: 0.2rem;
    --Alignment: initial;
    --BorderRadius: 0;
    --Background: transparent;
    --Color: var(--text-color);
    --Width: max-content;

    font-size: var(--Size);
    font-weight: var(--Weight);
    line-height: var(--LineSpacing);
    letter-spacing: var(--LetterSpacing);
    margin: var(--Margins);
    padding: var(--Padding);
    text-align: var(--Alignment);
    border-radius: var(--BorderRadius);
    background: var(--Background);
    color: var(--Color);
    font-size-adjust: none;
    width: var(--Width);
    max-width: 100%;
}

.builder\:card {
    --Background: var(--background-surface1);
    --Width: max-content;
    --Padding: 1rem;
    --Display: block;
    --Direction: row;
    --JustifyContent: initial;
    --AlignItems: initial;
    --Gap: 0;

    background: var(--Background);
    padding: var(--Padding);
    width: var(--Width);
    max-width: 100vw;
    min-width: 5rem;
    overflow: auto;
    height: max-content;

    display: var(--Display);
    flex-wrap: wrap;
    justify-content: var(--JustifyContent);
    align-items: var(--AlignItems);
    flex-direction: var(--Direction);
    gap: var(--Gap);
}

.builder\:card .builder\:card {
    max-width: 100%;
}

.builder\:embed {
    padding: 0.5rem;
}

.builder\:embed[src="about:blank"] {
    background: var(--background-surface-1);
    cursor: move !important;
}

.builder\:toolbar {
    position: fixed;
    top: 0.5rem;
    right: 0.5rem;
    border-radius: 0.25rem;
    background: var(--background-surface1);
    display: flex;
    flex-wrap: wrap;
    gap: 0.4rem;
    padding: 0.5rem;
    box-shadow: 0 0 4px var(--background-surface3);
    justify-content: center;
    align-items: center;
    height: 3.5rem;

    animation: FadeIn 0.75s 0s running;
}

.builder\:toolbar button {
    border-radius: 0.25rem;
    background: var(--background-surface1);
}

.builder\:toolbar button:hover {
    background: var(--background-surface1-5a);
}

.builder\:sidebar {
    height: 100vh;
    position: fixed;
    top: 0;
    left: 0;
    width: 25rem;
    border-right: solid 1px var(--background-surface2);
    background: var(--background-surface1);
    display: flex;
    flex-direction: column;
    animation: SlideInFromLeft 0.15s 0s running;
    overflow: auto;
}

.builder\:sidebar button,
.option {
    width: 100%;
    padding: 0.5rem;
    border-bottom: solid 1px var(--background-surface2);
    display: flex;
    gap: 0.4rem;
}

.option {
    flex-direction: column;
}

.builder\:drag-element {
    position: relative;
}

.builder\:drag-zone {
    user-select: none;
    -webkit-user-select: none;
    width: 100%;
    position: absolute;
    padding: 0.5rem;
    display: none;
    height: 5px;
}

.builder\:drag-zone.top {
    border-top: dashed 2px var(--background-surface2);
    top: -10px;
}

.builder\:drag-zone.bottom {
    border-bottom: dashed 2px var(--background-surface2);
    bottom: -10px;
}

.builder\:drag-zone.active {
    border-color: var(--blue2);
    display: block;
}

.component[data-edit="true"] {
    cursor: pointer;
}

.component.hover,
.component.active {
    outline: solid 2px var(--blue2);
}

.component h1 {
    width: 100%;
}

.component h1,
.component h2,
.component h3,
.component h4,
.component h5,
.component h6 {
    text-align: var(--Alignment);
}

.component * .htag {
    display: none;
}

.builder\:toolbar.always-absolute {
    height: max-content !important;
}

@media screen and (max-width: 900px) {
    .component.builder\:page[data-edit="true"] {
        /* adjust for toolbar */
        padding-top: 3.5rem;
    }

    .builder\:toolbar:not(.always-absolute) {
        width: 100vw;
        top: 0;
        left: 0;
        border-radius: 0;
    }

    .builder\:sidebar {
        width: 100vw;
    }
}
